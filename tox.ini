# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# Add other python versions here.
envlist =
    lint,
    py38,
    black,
    build
isolated_build = True

# testenv is the base test environment add deps here or in requirements.txt
[testenv]
basepython = python3.8
setenv =
    COVERAGE_FILE=.coverage.{envname}
# you can add external deps here like you would in requirements.txt
deps =
    -r requirements.txt
    # -e git+https://gitrepo.get#egg=name
commands =
    pytest {posargs:}
extras =
    testing


[testenv:coverage]
basepython = python3.8
commands =
    coverage combine
    coverage xml
    coverage report --show-missing
deps =
    coverage
setenv =
    COVERAGE_FILE=.coverage

[testenv:lint]
skip_install = True
basepython = python3.8
commands =
    black --check --diff .
    check-manifest
    # build sdist/wheel
    python -m pep517.build .
    twine check dist/*
deps =
    black
    readme_renderer
    check-manifest
    pep517
    twine

[testenv:run-flake8]
skip_install = True
basepython = python3.8
commands =
    flake8 src/<<module>>/ tests
deps =
    flake8
    flake8-bugbear

[testenv:run-black]
skip_install = True
basepython = python3.8
commands =
    black .
deps =
    black

[testenv:build]
skip_install = true
basepython = python3.8
commands =
    # clean up build/ and dist/ folders
    python -c 'import shutil; shutil.rmtree("build", ignore_errors=True)'
    # Make sure we aren't forgetting anything
    check-manifest
    # build sdist/wheel
    python -m pep517.build .
    # Verify all is well
    twine check dist/*

deps =
    readme_renderer
    check-manifest
    pep517
    twine

# This was needed at one point for pycharm
;[testenv:test]
;# Settings for running tests
;changedir = tests
;commands = py.test
;extras = testing
;passenv=*

# Test a service locally
;[testenv:run]
;skip_install = False
;changedir =
;    src
;commands =
;    #python command for running a service
;    flask runserver
;extras = run
;passenv=*

# This is for docs in docs-src folder for read the docs
;[testenv:docs]
;whitelist_externals =
;    make
;commands =
;    make -C docs-src html BUILDDIR={envdir} SPHINXOPTS="-E"
;extras =
;    docs

